package simplex.gui;

import java.io.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;
import simplex.source.*;

/**
 *
 * @author Taras
 */
public class MainWindow extends javax.swing.JFrame implements TableModelListener {
    public MyTableModel myTableModel = new MyTableModel();
    
    class MyTableModel extends AbstractTableModel {
        public int varCount; //к-сть змінних
        public int constraintsCount; //к-сть обмежень        
        public long[][] a;
        public long[] c;
        public long[] b;

        public MyTableModel() {
            varCount = 6;
            constraintsCount = 3;
//            a = new int[constraintsCount][varCount];
//            c = new int[varCount];
//            b = new int[constraintsCount];
            
            a = new long[][] { { 1, 1, 1, 1, -1, -1 }, { 0, 1, 1, -1, -1, -1 }, 
                { 0, 1, 0, 0, 0, -1 } };
            b = new long[] { 1, 1, 2 };
            c = new long[] { 1, 0, 1, 0, 0, 1 };
        }
        
        public MyTableModel(int varCount, int constraintsCount) {
            this.varCount = varCount;
            this.constraintsCount = constraintsCount;
            
            a = new long[constraintsCount][varCount];
            c = new long[varCount];
            b = new long[constraintsCount];            
        }
        
        @Override
        public int getRowCount() {
            return constraintsCount + 1;
        }

        @Override
        public int getColumnCount() {
            return varCount + 1;
        }
        
        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            if(rowIndex == constraintsCount && columnIndex == varCount) return false;
            else return true;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            if(!isCellEditable(rowIndex, columnIndex)) return " -> max";
            
            if(rowIndex < constraintsCount) {
                //матриця а
                if(columnIndex <  varCount) return a[rowIndex][columnIndex]; else return  b[rowIndex];
            } else {
                //стовбець коеф. ф-і
                if(columnIndex <  varCount) return c[columnIndex]; else return  b[rowIndex];
            }
            
        }
        
        @Override
        public String getColumnName(int col) {
            if(col <  varCount) return "a[i, " + (col + 1) + "], c[" + (col + 1) + "]"; 
            else return  " b[i]";
        }   
        
        @Override
        public void setValueAt(Object value, int rowIndex, int columnIndex) {
            int intValue = 0;
            try {
                intValue = Integer.parseInt(value.toString());
            } catch(NumberFormatException e) {
                JOptionPane.showMessageDialog(MainWindow.this , "Неправильний формат числа !\n" +
                        e.getMessage(), "Помилка !", JOptionPane.ERROR_MESSAGE);
                return;
            } 
                
            if(rowIndex < constraintsCount) {
                //матриця а
                if(columnIndex <  varCount) a[rowIndex][columnIndex] = intValue; else b[rowIndex] = intValue;
            } else {
                //стовбець коеф. ф-і
                if(columnIndex <  varCount) c[columnIndex] = intValue; else b[rowIndex] = intValue;
            }            
        }
    }

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        myTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Симплекс-метод");
        setAlwaysOnTop(true);
        setResizable(false);

        jLabel1.setText("Кількість змінних:");

        jLabel2.setText("Кількість рівнянь:");

        jTextField1.setText("6");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setText("3");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simplex/gui/Refresh.png"))); // NOI18N
        jButton1.setText("Обновити");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        myTable.setModel(myTableModel);
        jScrollPane1.setViewportView(myTable);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simplex/gui/Search.png"))); // NOI18N
        jButton2.setText("Обчислити");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTextPane1);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simplex/gui/Folder_Open.png"))); // NOI18N
        jButton3.setText("З файлу");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(66, 66, 66)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1ActionPerformed

    private static long[][] textFileToArray(String fileName) throws Exception {
        long[][] res = new long[0][0];
        try {
            BufferedReader in = new BufferedReader(new FileReader(new File(fileName)));
            try {
                int numline = 0;
                String s;
                while((s = in.readLine()) != null) {
                    try {
                        String[] a = s.split("\t");
                        if(numline == 0) {
                            int n = Integer.parseInt(a[0]);
                            int m = Integer.parseInt(a[1]);
                            
                            res = new long[m + 3][n];
                            res[0][0] = n;
                            res[0][1] = m;
                        } else {
                            for(int i = 0; i < a.length; i++) {
                                res[numline][i] = Integer.parseInt(a[i]);
                            } 
                        }
                    } catch(NumberFormatException | ArrayIndexOutOfBoundsException ex) {
                        throw new Exception(ex.toString());
                    }
                    
                    numline++;
                }
            } finally {
                in.close();
            }
        } catch (IOException e) {
            throw new Exception(e.toString());
        }
        return res;
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int varsCount;
        int contrainsCount;
        
        try {
            varsCount = Integer.parseInt(jTextField1.getText().trim());
            contrainsCount = Integer.parseInt(jTextField2.getText().trim());
        } catch(NumberFormatException e) {
            
            JOptionPane.showMessageDialog(this, "Неправильний формат числа !\n" + 
                    e.getMessage(), "Помилка !", JOptionPane.ERROR_MESSAGE);
            return;            
        }
        
        if(varsCount < 2 || contrainsCount < 2) {
            JOptionPane.showMessageDialog(this, "Змінних та рівнянь повинно бути не менше два !\n"  
                    , "Увага !", JOptionPane.ERROR_MESSAGE);
            return;
        }    
        
        //myTableModel.resizeTable(varsCount, contrainsCount);
        myTableModel = new MyTableModel(varsCount, contrainsCount);
        myTable.setModel(myTableModel);
        //myTable.revalidate();
        //myTable.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        Rational[] x = new Rational[myTableModel.c.length];
        Rational res = Simplex.simplex(Simplex.cnv(myTableModel.a), Simplex.cnv(myTableModel.b), Simplex.cnv(myTableModel.c), x);
        
        if(res == null) jTextPane1.setText("Нема допустимих розв'язків !");
        else if(res == Rational.POSITIVE_INFINITY) jTextPane1.setText("Простір допустимих рішень необмежено. Рішення не існує !"); 
        else
            jTextPane1.setText("X: " + Arrays.toString(x) + "\nC = " + res.toString());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser openFile = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Текстові файли (*.txt)", "txt");
        openFile.setFileFilter(filter);
        if(openFile.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = openFile.getSelectedFile();
            String fileName = file.getAbsolutePath();
            try {
                long[][] arr = textFileToArray(fileName);
                
                //System.out.println(Arrays.deepToString(arr) );
                myTableModel = new MyTableModel((int)arr[0][0],(int) arr[0][1]);
                jTextField1.setText(Integer.toString(myTableModel.varCount) );
                jTextField2.setText(Integer.toString(myTableModel.constraintsCount) );
                
                int i = 0;
                for(; i < myTableModel.constraintsCount; i++)
                    System.arraycopy(arr[i+1], 0, myTableModel.a[i], 0, myTableModel.varCount);   
                
                System.arraycopy(arr[i + 1], 0, myTableModel.b, 0, myTableModel.constraintsCount);
                
                System.arraycopy(arr[i + 2], 0, myTableModel.c, 0, myTableModel.varCount);
                
                myTable.setModel(myTableModel);
                
                //JOptionPane.showMessageDialog(this, fileName, "Файл імпортовано !", JOptionPane.OK_OPTION);

            } catch(Exception e) {
                JOptionPane.showMessageDialog(this, "Помилка відкриття файлу !\n" +
                    e.toString() + "\n", "Помилка !", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTable myTable;
    // End of variables declaration//GEN-END:variables

    @Override
    public void tableChanged(TableModelEvent e) {
    }
}
